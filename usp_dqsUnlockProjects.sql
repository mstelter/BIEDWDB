
/*
==============================================================================
Author		: Bruce Kutnick
Create date	: 12/19/2013
Description	: Unlock DQS Projects
==============================================================================
REVISION History
ChangeDate	Developer	    	Release/Problem Number
12/19/2013	BKutnick			 
==============================================================================
Usage Example:

==============================================================================
*/
  
CREATE PROCEDURE usp_dqsUnlockProjects

AS

BEGIN

SET NOCOUNT ON
 

DECLARE @FromDate datetime  
DECLARE @ToDate datetime
DECLARE @ProjectId bigint
DECLARE @LockClientId bigint
DECLARE @DqProject varbinary(max)
DECLARE @ResultRecords varbinary(max)
        ,@ErrMessage VARCHAR(max)
        ,@rowcount INT
        ,@errCount INT = 0
  
--Update From date and To date here before execution of script
SELECT @FromDate = DATEADD(dd, -12, GETDATE())   

------PRINT '***************************************************************'
------PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Executing script for date range ' + CAST(@FromDate AS VARCHAR(MAX)) + ' to ' +  CAST(@ToDate AS VARCHAR(MAX))
  
DECLARE DELETE_PROJECTS_CURSOR CURSOR FOR
        SELECT [ID], ISNULL([LOCK_CLIENT_ID],-1)
        FROM [DQS_Main].[dbo].[A_KNOWLEDGEBASE]
        WHERE [TYPE] = 3 -- BatchDQProject, projects that are generated by SSIS packages
        AND [CREATE_DATE] > @FromDate --BETWEEN @FromDate AND @ToDate
      
OPEN DELETE_PROJECTS_CURSOR
      
FETCH NEXT FROM DELETE_PROJECTS_CURSOR
INTO @ProjectId, @LockClientId
  
WHILE @@FETCH_STATUS = 0
BEGIN
    BEGIN TRY
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Operating on Project: [' + CAST(@ProjectId AS VARCHAR(MAX)) +']'
        EXECUTE [DQS_Main].[KnowledgebaseManagement].[SetDataQualitySession] @clientId=@LockClientId, @knowledgebaseId=NULL
  
        IF (@LockClientId != -1)
        BEGIN
            EXECUTE [DQS_Main].[KnowledgebaseManagement].[DQProjectGetById] @ProjectId,@DqProject OUTPUT
            EXECUTE [DQS_Main].[KnowledgebaseManagement].[DQProjectExit] @DqProject,@ResultRecords OUTPUT
        END
  
        -- delete project's activity archive
        ----DELETE FROM [dbo].[A_PROFILING_ACTIVITY_ARCHIVE]
        ----WHERE [ACTIVITY_ID] IN (SELECT ID FROM [dbo].[A_KNOWLEDGEBASE_ACTIVITY] WHERE [KNOWLEDGEBASE_ID] = @ProjectId)
  
        -- refresh the project state
        EXECUTE  [DQS_Main].[KnowledgebaseManagement].[DQProjectGetById] @ProjectId,@DqProject OUTPUT

		/* REM OUT THESE PROCS AS I DO NOT WANT TO DELETE THE PROJECT, ONLY UNLOCK IT! */
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Deleting project: [' + CAST(@ProjectId AS VARCHAR(MAX)) +']'
        ----EXECUTE [KnowledgebaseManagement].[DQProjectDelete] @DqProject
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Deleted project: [' + CAST(@ProjectId AS VARCHAR(MAX)) +']'
    END TRY
    BEGIN CATCH
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'An error has occurred with the following details'
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Error ' + CONVERT(varchar(50), ERROR_NUMBER()) +
        ----      ', Severity ' + CONVERT(varchar(5), ERROR_SEVERITY()) +
        ----      ', State ' + CONVERT(varchar(5), ERROR_STATE()) +
        ----      ', Procedure ' + ISNULL(ERROR_PROCEDURE(), '-') +
        ----      ', Line ' + CONVERT(varchar(5), ERROR_LINE());
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Error Message: ' + ERROR_MESSAGE();
        SELECT @errCount = @errCount + 1
        ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Skipping this project because of errors'
    END CATCH                  
    FETCH NEXT FROM DELETE_PROJECTS_CURSOR INTO @ProjectId, @LockClientId
END
----IF @errCount > 0
----    ----PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Script completed with ' + CAST(@errCount AS VARCHAR(MAX)) + ' errors'
----ELSE
----    PRINT CAST(GETDATE() AS VARCHAR(MAX)) + ' :: ' + 'Script completed successfully'
----PRINT '***************************************************************'
  
BEGIN TRY
    CLOSE DELETE_PROJECTS_CURSOR
    DEALLOCATE DELETE_PROJECTS_CURSOR
END TRY
BEGIN CATCH
    --Do nothing
END CATCH


END